{"version":3,"sources":["store/articles/types.ts","store/articles/action.ts","store/category/types.ts","store/category/action.ts","config/default.config.ts","api/index.ts","api/user.ts","utils/crypto-js.ts","store/user/action.ts","store/user/types.ts","components/header/component/LoginForm.tsx","components/header/component/PersonOption.tsx","components/header/component/LoginModal.tsx","components/header/index.tsx","api/blog.ts","components/sider/index.tsx","pages/home/components/ArticleList.tsx","pages/home/components/ProjectTab.tsx","pages/home/index.tsx","pages/article/index.tsx","pages/about/index.tsx","pages/article/Blog.tsx","pages/article/BlogEditor.tsx","pages/admin/Admin.tsx","Routes.tsx","style.ts","App.tsx","serviceWorker.ts","store/articles/sagas.ts","store/articles/reducer.ts","store/category/sagas.ts","store/category/reducer.ts","store/user/reducer.ts","store/inex.ts","index.tsx","configStore.ts"],"names":["BlogActionTypes","categoryActionTypes","fetchRequest","action","FETCH_REQUEST","fetchSuccess","data","FETCH_SUCCESS","fetchError","message","FETCH_ERROR","APP_TOKEN_KEY","axios","defaults","baseURL","withCredentials","transformRequest","Qs","stringify","interceptors","response","use","result","request","config","token","localStorage","getItem","url","includes","console","log","headers","authorization","error","Promise","reject","userLogin","Axios","post","encrypt","str","s","crypto","MD5","toString","enc","Hex","s1","slice","length","s2","AES","userLoginAction","type","NormalLoginForm","props","handleSubmit","e","preventDefault","form","validateFields","err","values","a","account","password","JSON","key","res","setItem","setingVisible","success","msg","this","state","visble","getFieldDecorator","visible","visbleFromParent","footer","onCancel","ev","onSubmit","className","Item","rules","required","prefix","style","color","placeholder","valuePropName","initialValue","htmlType","onClick","React","Component","WrappedNormalLoginForm","Form","create","connect","PersonOption","menu","to","removeItem","userLogoutAction","overlay","trigger","LoginModal","handleFormVisable","visable","setState","isFormVisble","login","icon","shape","mapDispatch","user","AppHeader","handleClick","current","category","fetchCategory","selectedKeys","mode","blogs","createArticle","batchDeleteArticle","articleIds","delete","getArticles","page","limit","tag","get","params","getArticle","id","md","getCategories","AppSilder","useState","rencent","setRencent","useEffect","items","bordered","width","src","alt","map","item","_id","title","IconText","text","marginRight","ArticleList","itemLayout","size","dataSource","pagination","onChange","pageSize","renderItem","delay","actions","viewsCount","likeCount","commentCount","extra","Meta","avatar","description","summary","content","ContentTab","target","value","TabPane","Tabs","AppHome","defaultActiveKey","textAlign","tab","ProjectTab","Article","isLoading","show","loading","filter","name","About","height","orientation","href","disabled","defaultValue","allowHalf","BlogContent","location","pathname","split","setTimeout","history","push","createdAt","source","rawSourcePos","escapeHtml","Option","Select","BlogEditor","handleChange","substr","articleId","hasFeedback","onSave","WrappedDynamicFieldSet","Admin","columns","deleteLoading","dataIndex","render","record","rowSelection","selectedRowKeys","selectedRows","spinning","rowKey","Routes","useLocation","sm","xs","lg","xl","TransitionGroup","CSSTransition","classNames","timeout","path","component","from","Globalstyle","createGlobalStyle","App","store","locale","zhCN","Boolean","window","hostname","match","watchFetchRequest","blogsSaga","param","call","put","Error","stack","takeEvery","all","fork","initialState","errors","undefined","reducer","payload","getCategory","categorySaga","rootSaga","createRootReducer","combineReducers","userReducer","blogReducer","categoryReducer","router","connectRouter","INITIAL_REDUX_STATE","createBrowserHistory","composeEnhancers","composeWithDevTools","sagaMiddleware","createSagaMiddleware","createStore","applyMiddleware","routerMiddleware","run","configureStore","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.ade8055e.chunk.js","sourcesContent":["import { Category } from '../category/types'\nexport interface ResponseData<T> {\n  code: number\n  msg: string\n  data: T\n}\n\nexport interface Blog extends ApiResponse {\n  readonly _id: string\n  readonly title: string\n  readonly content?: string\n  readonly summary: string\n  readonly category: Category\n  readonly commentCount?: number\n  readonly viewsCount?: number\n  readonly likeCount?: number\n  readonly createdAt: string\n  readonly tags?: string[]\n  readonly pre?: string\n  readonly next?: string\n}\n\nexport interface Dataresponse {\n  code: number\n  msg: string\n  data: ResponseData<Blog[]>\n}\n\n// This type is basically shorthand for `{ [key: string]: any }`. Feel free to replace `any` with\n// the expected return type of your API response.\nexport type ApiResponse = Record<string, any>\n\n// Use `enum`s for better autocompletion of action type names. These will\n// be compiled away leaving only the final value in your compiled code.\n//\n// Define however naming conventions you'd like for your action types, but\n// personally, I use the `@@context/ACTION_TYPE` convention, to follow the convention\n// of Redux's `@@INIT` action.\nexport enum BlogActionTypes {\n  FETCH_REQUEST = '@@blog/FETCH_REQUEST',\n  FETCH_SUCCESS = '@@blog/FETCH_SUCCESS',\n  FETCH_ERROR = '@@blog/FETCH_ERROR'\n}\n\n// Declare state types with `readonly` modifier to get compile time immutability.\n// https://github.com/piotrwitek/react-redux-typescript-guide#state-with-type-level-immutability\nexport interface BlogState {\n  readonly loading: boolean\n  readonly data: Blog[]\n  readonly errors?: string\n}\n","import { action } from 'typesafe-actions'\nimport { BlogActionTypes, Blog } from './types'\n\nexport const fetchRequest = () => action(BlogActionTypes.FETCH_REQUEST)\n\nexport const fetchSuccess = (data: Blog[]) => action(BlogActionTypes.FETCH_SUCCESS, data)\nexport const fetchError = (message: string) => action(BlogActionTypes.FETCH_ERROR, message)\n","export interface ResponseData<T> {\n  code: number\n  msg: string\n  data: T\n}\n\nexport interface Category extends ApiResponse {\n  readonly _id: string\n  readonly name: string\n  readonly createdAt: string\n  readonly updatedAt: string\n  readonly articleCount: number\n}\n\nexport interface Dataresponse {\n  code: number\n  msg: string\n  data: ResponseData<Category[]>\n}\n\n// This type is basically shorthand for `{ [key: string]: any }`. Feel free to replace `any` with\n// the expected return type of your API response.\nexport type ApiResponse = Record<string, any>\n\n// Use `enum`s for better autocompletion of action type names. These will\n// be compiled away leaving only the final value in your compiled code.\n//\n// Define however naming conventions you'd like for your action types, but\n// personally, I use the `@@context/ACTION_TYPE` convention, to follow the convention\n// of Redux's `@@INIT` action.\nexport enum categoryActionTypes {\n  FETCH_REQUEST = '@@category/FETCH_REQUEST',\n  FETCH_SUCCESS = '@@category/FETCH_SUCCESS',\n  FETCH_ERROR = '@@category/FETCH_ERROR'\n}\n\n// Declare state types with `readonly` modifier to get compile time immutability.\n// https://github.com/piotrwitek/react-redux-typescript-guide#state-with-type-level-immutability\nexport interface CategoryState {\n  readonly loading: boolean\n  readonly data: Category[]\n  readonly errors?: string\n}\n","import { action } from 'typesafe-actions'\nimport { categoryActionTypes, Category } from './types'\n\nexport const fetchRequest = () => action(categoryActionTypes.FETCH_REQUEST)\n\nexport const fetchSuccess = (data: Category[]) => action(categoryActionTypes.FETCH_SUCCESS, data)\nexport const fetchError = (message: string) => action(categoryActionTypes.FETCH_ERROR, message)\n","export const APP_TOKEN_KEY = 'NODEBLOG/blog.fanjianfeng1010.com/TOKEN'\n","import axios, { AxiosRequestConfig } from 'axios'\nimport Qs from 'qs'\nimport { APP_TOKEN_KEY } from '../config/default.config'\n\naxios.defaults.baseURL = 'http://49.234.190.126:2300'\naxios.defaults.withCredentials = true\naxios.defaults.transformRequest = (data = {}) => {\n  return Qs.stringify(data)\n  // 坑爹的问题怎么解决\n}\naxios.interceptors.response.use((result: AxiosRequestConfig) => result.data)\naxios.interceptors.request.use(\n  function(config: any) {\n    const token = localStorage.getItem(APP_TOKEN_KEY)\n\n    if (!(config.url.includes('getFirstLoginInfo') || config.url.includes('login'))) {\n      if (!token) {\n        console.log('没有授权')\n      }\n    }\n    /*  if (config.method === 'delete') {\n      config.headers['Content-Type'] = ''\n     }*/\n\n    config.headers['Content-Type'] = 'application/x-www-form-urlencoded'\n    config.headers.authorization = token || ''\n    return config\n  },\n  function(error) {\n    return Promise.reject(error)\n  }\n)\n\n/**\n * 配置request请求时的默认参数\n */\naxios.interceptors.response.use(function(response) {\n  return response\n})\n\nexport default axios\n","import Axios from './index'\n\n// 发送登录请求\nexport const userLogin = (data: userLoginParams) => {\n  return Axios.post('/api/login', data)\n}\n\ninterface userLoginParams {\n  key: string\n}\n","import crypto from 'crypto-js'\n\n//加密方法\nexport const encrypt = (str: string) => {\n  let md5 = crypto.MD5(str)\n  const s = md5.toString(crypto.enc.Hex)\n  const s1 = s.slice(0, s.length / 2)\n  const s2 = s.slice(s.length / 2, s.length)\n  let encrypted = crypto.AES.encrypt(str, s)\n  return s1 + encrypted.toString() + s2\n}\n\nexport const md5 = crypto.MD5\n","import { USER_LOGIN_ACTION, USER_LOGOUT_ACTION } from './types'\n\nexport const userLoginAction = () => {\n  return {\n    type: USER_LOGIN_ACTION\n  }\n}\n\nexport const userLogoutAction = () => {\n  return {\n    type: USER_LOGOUT_ACTION\n  }\n}\n","export interface UserState {\n  login: boolean\n}\n\nexport const USER_LOGIN_ACTION = 'USER_LOGIN_ACTION'\nexport type USER_LOGIN_ACTION = typeof USER_LOGIN_ACTION\n\nexport const USER_LOGOUT_ACTION = 'USER_LOGOUT_ACTION'\nexport type USER_LOGOUT_ACTION = typeof USER_LOGOUT_ACTION\n\nexport interface UserLoginAction {\n  type: USER_LOGIN_ACTION\n}\n\nexport interface UserLogOutAction {\n  type: USER_LOGOUT_ACTION\n}\n\nexport type UserAction = UserLoginAction | UserLogOutAction\n","import React from 'react'\nimport { Form, Icon, Input, Button, Checkbox, Modal, message } from 'antd'\nimport { FormComponentProps } from 'antd/lib/form'\nimport { userLogin } from '../../../api/user'\nimport { encrypt } from '../../../utils/crypto-js'\nimport { APP_TOKEN_KEY } from '../../../config/default.config'\nimport { userLoginAction } from '../../../store/user/action'\nimport { connect } from 'react-redux'\n\ninterface IProps {\n  visbleFromParent: boolean\n  setingVisible: (arg: boolean) => any\n}\n\ninterface PropFromDispatch {\n  userLoginAction: typeof userLoginAction\n}\n\ntype componentPorps = IProps & PropFromDispatch & FormComponentProps\ninterface IState {\n  visble: boolean\n}\n\nclass NormalLoginForm extends React.Component<componentPorps, IState> {\n  constructor(props: componentPorps) {\n    super(props)\n    this.state = {\n      visble: true\n    }\n  }\n\n  handleSubmit = (e: any) => {\n    e.preventDefault()\n    this.props.form.validateFields(async (err, values) => {\n      // 校验数据输入合法后,把得到的结果转化为字符串并加密,使用 userLogin 方法把数据发送到服务器上\n      // 如果服务器返回登录的数据不为 null,即登录成功,此时把把服务器发送回来的 token 保存在 localStorage 中\n\n      if (!err) {\n        let { account, password } = values\n\n        let str = encrypt(JSON.stringify({ account, password }))\n        let res = await userLogin({ key: str })\n\n        if (res.data.token) {\n          localStorage.setItem(APP_TOKEN_KEY, res.data.token)\n          this.props.setingVisible(false)\n          message.success('登录成功')\n          this.props.userLoginAction()\n        } else {\n          message.error(res.data.msg)\n        }\n      }\n    })\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form\n    return (\n      <Modal\n        visible={this.props.visbleFromParent}\n        footer={null}\n        onCancel={(ev) => {\n          this.props.setingVisible(false)\n        }}>\n        <Form onSubmit={this.handleSubmit} className=\"login-form\">\n          <Form.Item>\n            {getFieldDecorator('account', {\n              rules: [{ required: true, message: 'Please input your username!' }]\n            })(\n              <Input\n                prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                placeholder=\"Username\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator('password', {\n              rules: [{ required: true, message: 'Please input your Password!' }]\n            })(\n              <Input\n                prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n                type=\"password\"\n                placeholder=\"Password\"\n              />\n            )}\n          </Form.Item>\n          <Form.Item>\n            {getFieldDecorator('remember', {\n              valuePropName: 'checked',\n              initialValue: true\n            })(<Checkbox>Remember me</Checkbox>)}\n            <Button\n              type=\"primary\"\n              htmlType=\"submit\"\n              className=\"login-form-button\"\n              onClick={this.handleSubmit}>\n              Log in\n            </Button>\n          </Form.Item>\n        </Form>\n      </Modal>\n    )\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create<componentPorps>()(NormalLoginForm)\n\nexport default connect(\n  null,\n  { userLoginAction }\n)(WrappedNormalLoginForm)\n","import React, { Component } from 'react'\nimport { Menu, Dropdown, Icon, Button, message } from 'antd'\nimport { Link } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { APP_TOKEN_KEY } from '../../../config/default.config'\nimport { userLogoutAction } from '../../../store/user/action'\n\ntype ComponentProps = {\n  userLogoutAction: typeof userLogoutAction\n}\n\nclass PersonOption extends Component<ComponentProps> {\n  menu = (\n    <Menu>\n      <Menu.Item>\n        <Link to=\"/editor\">写文章</Link>\n      </Menu.Item>\n      <Menu.Item>\n        <Link to=\"/admin\">管理</Link>\n      </Menu.Item>\n      <Menu.Item>\n        <Button\n          type=\"link\"\n          onClick={(ev: any) => {\n            localStorage.removeItem(APP_TOKEN_KEY)\n            this.props.userLogoutAction()\n            message.success('祝你生活愉快')\n          }}>\n          退出登录\n        </Button>\n      </Menu.Item>\n    </Menu>\n  )\n  render() {\n    return (\n      <div>\n        <Dropdown overlay={this.menu} trigger={['click']}>\n          <Link to=\"/\">\n            <Icon type=\"down\" />\n            博客管理\n          </Link>\n        </Dropdown>\n      </div>\n    )\n  }\n}\n\nexport default connect(\n  null,\n  { userLogoutAction }\n)(PersonOption)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Button } from 'antd'\nimport WrappedNormalLoginForm from './LoginForm'\nimport PersonOption from './PersonOption'\nimport { ApplicationState } from '../../../store/inex'\nimport { userLoginAction } from '../../../store/user/action'\n\ntype IState = {\n  isFormVisble: boolean\n}\n\ntype PromFromMap = {\n  login: boolean\n}\ntype PropFromDispath = {\n  userLoginAction: typeof userLoginAction\n}\ntype ComponentProps = PromFromMap & PropFromDispath\n\nclass LoginModal extends Component<ComponentProps, IState> {\n  constructor(props: ComponentProps) {\n    super(props)\n    this.state = {\n      isFormVisble: false\n    }\n  }\n\n  handleFormVisable = (visable: boolean) => {\n    this.setState({\n      isFormVisble: !this.state.isFormVisble\n    })\n  }\n  render() {\n    return (\n      <div className=\"login\">\n        {/* 如果当前用户是登录状态,那么在右上角显示用户可以进行的操作选项,\n        否则就显示一个可以点击的按钮,点击按钮会生成一个模态框,用户可以用来进行登录操作 */}\n        {this.props.login ? (\n          <PersonOption />\n        ) : (\n          <Button\n            icon=\"user\"\n            shape=\"circle\"\n            type=\"primary\"\n            onClick={(ev) => {\n              this.setState({\n                isFormVisble: true\n              })\n            }}></Button>\n        )}\n        <WrappedNormalLoginForm\n          visbleFromParent={this.state.isFormVisble}\n          setingVisible={(visble) => this.handleFormVisable(this.state.isFormVisble)}\n        />\n      </div>\n    )\n  }\n}\n\nconst mapState = ({ user }: ApplicationState) => {\n  return {\n    login: user.login\n  }\n}\nconst mapDispatch = {\n  userLoginAction\n}\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(LoginModal)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { ApplicationState } from '../../store/inex'\nimport { Menu, Icon } from 'antd'\nimport { fetchRequest } from '../../store/articles/action'\nimport { fetchRequest as fetchCategory } from '../../store/category/action'\n\n// 自己写的组件\nimport { Blog } from '../../store/articles/types'\nimport LoginModal from './component/LoginModal'\n\n// css\nimport './styles.less'\nimport { Category } from '../../store/category/types'\n\ntype headerState = {\n  current: string\n}\ntype PropFromMap = {\n  data: Blog[]\n  login: boolean\n  category: Category[]\n}\ntype PropFromDispatch = {\n  fetchRequest: typeof fetchRequest\n  fetchCategory: typeof fetchCategory\n}\ntype ComponentProps = PropFromDispatch & PropFromMap\n\nclass AppHeader extends Component<ComponentProps, headerState> {\n  constructor(props: ComponentProps) {\n    super(props)\n    this.state = {\n      current: 'home'\n    }\n  }\n\n  // 在进入主页时,从服务器中加载数据,并且把文章数据放进 redux 中,因为头部组件是多个页面共享的组件\n  // 所以在头部组件发送请求获取数据.\n\n  async componentDidMount() {\n    // 如果组件已经有数据了,就不必再发送请求了\n    if (!this.props.data || this.props.data.length === 0) {\n      await this.props.fetchRequest()\n    }\n    if (!this.props.category || this.props.category.length === 0) {\n      await this.props.fetchCategory()\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"header-wrapper\">\n        <Menu onClick={this.handleClick} selectedKeys={[this.state.current]} mode=\"horizontal\">\n          <Menu.Item key=\"home\">\n            <Link to=\"/home\">\n              <Icon type=\"home\" />\n              首页\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"article\">\n            <Link to=\"/article\">\n              <Icon type=\"profile\" />\n              文章\n            </Link>\n          </Menu.Item>\n          <Menu.Item key=\"about\">\n            <Link to=\"/about\">\n              <Icon type=\"user\" />\n              关于\n            </Link>\n          </Menu.Item>\n        </Menu>\n        <LoginModal />\n      </div>\n    )\n  }\n\n  // 设置点击不同组件时 active 效果\n  handleClick = (e: any) => {\n    this.setState({\n      current: e.key\n    })\n  }\n}\n\n// 把 redux 容器的中数据挂载到组件的 props 上\nconst mapState = ({ blogs, user, category }: ApplicationState) => {\n  return {\n    data: blogs.data,\n    login: user.login,\n    category: category.data\n  }\n}\n\nconst mapDispatch = {\n  fetchRequest,\n  fetchCategory\n}\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(AppHeader)\n","import axios from './index'\n\n// 添加新的文章\nexport const createArticle = (data: any) => axios.post('/api/articles', data)\n\n// 修改文章内容\nexport const updateArticleById = (id: string, data: any) => axios.put(`/api/articles/${id}`, data)\n\n// 删除指定文章\nexport const deleteArticleById = (id: string) => axios.delete(`/api/article/${id}`)\n\n// 批量删除文章\nexport const batchDeleteArticle = (articleIds: string[]) => {\n  // let ids = Qs.stringify(articleIds, { indices: false })\n  // let articleIds = Qs.stringify(ids, { indices: false })\n\n  return axios.delete('/api/articles', {\n    data: { articleIds }\n  })\n}\n\n// 获取所有文章\nexport const getArticles = (page: number, limit: number, category?: string, tag?: string) =>\n  axios.get('/api/articles', {\n    params: {\n      page,\n      limit,\n      category,\n      tag\n    }\n  })\n\n// 获取单篇文章\nexport const getArticle = (id: string, md = false) =>\n  axios.get(`/api/article/${id}`, {\n    params: {\n      md\n    }\n  })\n\n// 获取所有分类\nexport const getCategories = () => {\n  return axios.get('/api/categories')\n}\n\n// 新增 文章分类\nexport const createCategory = (name: string) => {\n  return axios.post('/api/category', {\n    name\n  })\n}\n\n// 获得最近三篇文章\nexport const getRencent = () => {\n  return axios.get('/api/rencent')\n}\n","import React, { useState, useEffect } from 'react'\n\nimport { Card, Icon, Divider, Skeleton } from 'antd'\n// import { RouteComponentProps } from 'react-router-dom'\nimport './style.less'\nimport { Blog } from '../../store/articles/types'\nimport { getRencent } from '../../api/blog'\n\n// 这个模块主要是侧栏,没有太多需要与用户交户的操作,所以使用函数组件,需要从服务器获取一次数据,\n// 使用了 hook effect\nconst AppSilder: React.FC<any> = () => {\n  const [rencent, setRencent] = useState<Blog[]>([])\n  useEffect(() => {\n    ;(async function anyfunction() {\n      let res = await getRencent()\n      setRencent(res.data.items)\n    })()\n  }, [])\n  return (\n    <Card bordered={true} style={{ width: '100%' }}>\n      <div className=\"account\">\n        <img\n          src=\"https://gw.alipayobjects.com/zos/antfincdn/XAosXuNZyF/BiazfanxmamNRoxxVxka.png\"\n          alt=\"\"\n        />\n        <div className=\"account-name\">范剑峰</div>\n        <div>座右铭</div>\n      </div>\n      <div className=\"account-detail\">\n        <p>\n          <Icon type=\"tag\" /> 前端程序员\n        </p>\n        <p>\n          <Icon type=\"contacts\" /> 广东,广州\n        </p>\n      </div>\n\n      <Divider />\n      <div className=\"tag\">\n        <div className=\"tag-title\">标签</div>\n        <span className=\"tag-content\">认真</span>\n      </div>\n      {/* 从服务器接口返回数据加载 */}\n      <Divider />\n\n      <div className=\"recent-article\">\n        <div className=\"rencent-article-title\">最新文章</div>\n      </div>\n      {rencent.length !== 0 ? (\n        rencent.map((item) => <p key={item._id}>{item.title}</p>)\n      ) : (\n        <Skeleton />\n      )}\n    </Card>\n  )\n}\n\nexport default AppSilder\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { List, Icon, Avatar } from 'antd'\nimport { ApplicationState } from '../../../store/inex'\nimport { Blog } from '../../../store/articles/types'\nimport QueueAnim from 'rc-queue-anim'\nimport { Link } from 'react-router-dom'\n\nconst IconText = ({ type, text }: any) => (\n  <span>\n    <Icon type={type} style={{ marginRight: 8 }} />\n    {text}\n  </span>\n)\n\ninterface OwnProps {}\ninterface PropsFromMap {\n  data: Blog[]\n}\ntype ComponentProps = PropsFromMap & OwnProps\n\nclass ArticleList extends Component<ComponentProps> {\n  render() {\n    return (\n      <div>\n        <List\n          itemLayout=\"vertical\"\n          size=\"large\"\n          dataSource={this.props.data}\n          pagination={{\n            onChange: (page) => {},\n            pageSize: 3\n          }}\n          footer={\n            <div>\n              <b>呀,一不小心就拉倒末尾了</b>\n            </div>\n          }\n          renderItem={(item: Blog) => (\n            <QueueAnim delay={1000} className=\"queue-simple\">\n              <List.Item\n                key={item.title}\n                actions={[\n                  <IconText type=\"star-o\" text={item.viewsCount} key=\"list-vertical-star-o\" />,\n                  <IconText type=\"like-o\" text={item.likeCount} key=\"list-vertical-like-o\" />,\n                  <IconText type=\"message\" text={item.commentCount} key=\"list-vertical-message\" />\n                ]}\n                extra={\n                  <img\n                    width={272}\n                    alt=\"logo\"\n                    src=\"https://i.loli.net/2019/10/27/Zo46FpD53HmPC9Q.jpg\"\n                  />\n                }>\n                <List.Item.Meta\n                  avatar={<Avatar src=\"https://i.loli.net/2019/10/27/Zo46FpD53HmPC9Q.jpg\" />}\n                  title={<Link to={`/blog/${item._id}`}>{item.title}</Link>}\n                  description={item.summary}\n                />\n                {item.content}\n              </List.Item>\n            </QueueAnim>\n          )}\n        />\n      </div>\n    )\n  }\n}\nconst mapState = ({ blogs }: ApplicationState) => {\n  let data = blogs.data\n  return { data }\n}\n\nconst mapDispatch = {}\nexport default connect(\n  mapState,\n  mapDispatch\n)(ArticleList)\n","import React from 'react'\n\nimport {  Empty } from 'antd'\n\nclass ContentTab extends React.Component {\n  state = { size: 'small' }\n\n  onChange = (e: any) => {\n    this.setState({ size: e.target.value })\n  }\n\n  render() {\n    return (\n      <div>\n        <Empty />\n      </div>\n    )\n  }\n}\n\nexport default ContentTab\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Card, Tabs } from 'antd'\n\n// 自己写的组件\nimport ArticleList from './components/ArticleList'\nimport ProjectTab from './components/ProjectTab'\n// style\nimport './style.less'\nimport { ApplicationState } from '../../store/inex'\nimport { Blog } from '../../store/articles/types'\nimport { RouteComponentProps } from 'react-router-dom'\nconst { TabPane } = Tabs\n\ntype PropFromMap = {\n  data: Blog[]\n}\ntype PropFromDispatch = {}\ntype ComponentProps = PropFromDispatch & PropFromMap & RouteComponentProps\nclass AppHome extends Component<ComponentProps> {\n  render() {\n    return (\n      <Card>\n        <Tabs defaultActiveKey=\"1\" size={'large'} style={{ textAlign: 'left' }}>\n          <TabPane tab=\"文章\" key=\"1\">\n            <div className=\"card-body\">\n              {/* loading 效果要实现 */}\n              <ArticleList />\n            </div>\n          </TabPane>\n          <TabPane tab=\"项目\" key=\"2\">\n            <ProjectTab />\n          </TabPane>\n        </Tabs>\n      </Card>\n    )\n  }\n}\n\nconst mapState = ({ blogs }: ApplicationState) => {\n  return {\n    data: blogs.data\n  }\n}\n\nexport default connect(\n  mapState,\n  null\n)(AppHome)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link, RouteComponentProps } from 'react-router-dom'\nimport { Skeleton, Card, Tag, Divider, List, Avatar } from 'antd'\n\n// css\nimport './index.less'\nimport { ApplicationState } from '../../store/inex'\nimport { Blog } from '../../store/articles/types'\nimport { fetchRequest } from '../../store/articles/action'\n\ninterface IState {\n  isLoading: boolean\n  show: boolean\n}\ntype PropFromMap = {\n  data: Blog[]\n}\ntype PropFromDispatch = {\n  fetchRequest: typeof fetchRequest\n}\ntype ComponentProps = PropFromDispatch & RouteComponentProps & PropFromMap\n\nclass Article extends Component<ComponentProps, IState> {\n  constructor(props: ComponentProps) {\n    super(props)\n    this.state = {\n      isLoading: true,\n      show: false\n    }\n  }\n\n  async componentDidMount() {\n    if (!this.props.data || this.props.data.length !== 0) {\n      await fetchRequest()\n    }\n\n    this.setState({\n      show: true,\n      isLoading: false\n    })\n  }\n\n  render() {\n    if (!this.props.data || this.props.data.length === 0) {\n      return <Skeleton></Skeleton>\n    }\n    const { data } = this.props\n\n    return (\n      <Skeleton loading={this.state.isLoading}>\n        <Card className=\"articleWrapper\">\n          <div className=\"category\">\n            <Tag color=\"magenta\">javascrpt</Tag>\n            <List\n              itemLayout=\"horizontal\"\n              dataSource={data.filter((item) => item.category.name === 'javascript')}\n              renderItem={(item) => (\n                <List.Item>\n                  <List.Item.Meta\n                    avatar={<Avatar src=\"https://i.loli.net/2019/10/27/Zo46FpD53HmPC9Q.jpg\" />}\n                    title={<Link to={`/blog/${item._id}`}>{item.title}</Link>}\n                    description={item.summary}\n                  />\n                </List.Item>\n              )}\n            />\n          </div>\n          <Divider />\n          <div className=\"category\">\n            <Tag color=\"orange\">css</Tag>\n            <List\n              itemLayout=\"horizontal\"\n              dataSource={data.filter((item: Blog) => item.category.name === 'css')}\n              renderItem={(item) => (\n                <List.Item>\n                  <List.Item.Meta\n                    avatar={<Avatar src=\"https://i.loli.net/2019/10/27/Zo46FpD53HmPC9Q.jpg\" />}\n                    title={<Link to={`/blog/${item._id}`}>{item.title}</Link>}\n                    description={item.summary}\n                  />\n                </List.Item>\n              )}\n            />\n          </div>\n          <Divider />\n          <div className=\"category\">\n            <Tag color=\"orange\">随笔</Tag>\n            <List\n              itemLayout=\"horizontal\"\n              dataSource={data.filter((item: Blog) => item.category.name === 'note')}\n              renderItem={(item) => (\n                <List.Item>\n                  <List.Item.Meta\n                    avatar={<Avatar src=\"https://i.loli.net/2019/10/27/Zo46FpD53HmPC9Q.jpg\" />}\n                    title={<Link to={`/blog/${item._id}`}>{item.title}</Link>}\n                    description={item.summary}\n                  />\n                </List.Item>\n              )}\n            />\n          </div>\n          <Divider />\n        </Card>\n      </Skeleton>\n    )\n  }\n}\n\nconst mapState = ({ blogs }: ApplicationState) => {\n  return {\n    data: blogs.data\n  }\n}\n\nexport default connect(\n  mapState,\n  {}\n)(Article)\n","import React from 'react'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { Card, Skeleton, Divider, Icon, Rate } from 'antd'\n\nimport './index.less'\n\ntype ComponentProps = RouteComponentProps\nconst About: React.FC<ComponentProps> = () => {\n  return (\n    <Skeleton loading={false}>\n      <Card className=\"about-wrapper\" style={{ height: '100vh' }}>\n        <Divider orientation={'left'}>博客简述</Divider>\n        <p>\n          本博客是使用react + and + nestjs + mongo 实现的\n          还有很多做得不好的地方,项目的成因是因为自学了那么久,都是看视频,没试过自己去实现项目,\n          于是就想把自己学到东西实践一下,同时可以检测一下自己哪里还学得不够好,在项目中,发现了自己好多知识学习得不好,\n          同时也进步了很多\n        </p>\n        <Divider orientation={'left'}>关于我</Divider>\n        <ul>\n          <li>姓名:范剑峰</li>\n          <li>毕业院校:广东轻工职业技术学院</li>\n          <li>学历专业:大专 | 软件技术</li>\n          <li>\n            联系方式:\n            <Icon type=\"mail\" />\n            <a href=\"mailto:264589826@qq.com\">264589826@qq.com</a>\n            <Icon type=\"phone\" /> 13416179124\n          </li>\n          <li>坐标:广州市</li>\n          <li>\n            技能\n            <ul className=\"skill\">\n              <li>\n                HTML、CSS、Javascript：能熟练开发符合 W3C 标准的页面！\n                <Rate disabled defaultValue={3} />\n              </li>\n              <li>\n                react ：熟练掌握使用！\n                <Rate allowHalf disabled defaultValue={2.5} />\n              </li>\n              <li>\n                es6：掌握基本面向对象编程实现！\n                <Rate allowHalf disabled defaultValue={3} />\n              </li>\n              <li>\n                typescript:日常使用 typescript 构建类型明确的应用\n                <Rate allowHalf disabled defaultValue={3} />\n              </li>\n              <li>\n                webpack: 入门级别，可以对脚手架进行针对性的配置！\n                <Rate disabled defaultValue={2.5} />\n              </li>\n              <li>\n                node mysql：针对需求可以做到简单的数据库设计、接口的开发与设计！\n                <Rate allowHalf disabled defaultValue={2.5} />\n              </li>\n              <li>\n                个人\n                <ul>\n                  <li>良好的代码习惯,规范注释</li>\n                  <li>正在求职,欢迎交流</li>\n                </ul>\n              </li>\n            </ul>\n          </li>\n        </ul>\n      </Card>\n    </Skeleton>\n  )\n}\n\nexport default About\n","import React, { Component } from 'react'\n\nimport { Card, Divider, Icon, Tag, message, BackTop } from 'antd'\nimport ReactMarkdown from 'react-markdown'\nimport { getArticle } from '../../api/blog'\nimport { Blog } from '../../store/articles/types'\nimport { RouteComponentProps } from 'react-router-dom'\n\nimport './test.less'\n\ninterface Props {}\ninterface IState {\n  data: Blog | null\n  loading: boolean\n}\ntype ComponentProps = Props & RouteComponentProps\n\nclass BlogContent extends Component<ComponentProps, IState> {\n  constructor(props: ComponentProps) {\n    super(props)\n    this.state = {\n      data: null,\n      loading: true\n    }\n  }\n  async componentDidMount() {\n    if (this.state.data === null) {\n      let id = this.props.location.pathname.split('g/')[1]\n      let res = await getArticle(id, false)\n\n      if (res.data) {\n        this.setState({\n          loading: false,\n          data: res.data\n        })\n      } else {\n        message.error('你好像来到一个没有知识的荒原了,立刻为你跳转到首页')\n        setTimeout(() => {\n          this.props.history.push('/home')\n        }, 3000)\n      }\n    }\n  }\n\n  render() {\n    if (this.state.data === null) return ''\n    let { data } = this.state\n    let { createdAt } = data\n    createdAt = createdAt.split('T')[0]\n    return (\n      <div>\n        <Card title=\"博文标题\" style={{ textAlign: 'center' }}>\n          <BackTop />\n          <div className=\"info\">\n            <Icon type=\"note\" />\n            {createdAt}\n            <Divider type=\"vertical\" />\n            <Icon type=\"eye\" style={{ marginRight: '5px' }} />\n            {data.viewsCount}\n            <Divider type=\"vertical\" />\n            <Icon type=\"tag\" style={{ marginRight: '5px' }} />\n            <Tag color=\"red\">{data.category.name}</Tag>\n            <Divider type=\"vertical\" />\n          </div>\n          <Divider />\n          <div style={{ textAlign: 'left' }}>\n            <ReactMarkdown source={data!.content} rawSourcePos={true} escapeHtml={false} />\n          </div>\n        </Card>\n      </div>\n    )\n  }\n}\n\nexport default BlogContent\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { RouteComponentProps } from 'react-router-dom'\nimport { Form, Button, Icon, Input, Select, message } from 'antd'\nimport Editor from 'for-editor'\nimport { FormComponentProps } from 'antd/lib/form'\nimport { createArticle } from '../../api/blog'\nimport { ApplicationState } from '../../store/inex'\nimport { fetchRequest as fetchCategory } from '../../store/category/action'\nimport { Category } from '../../store/category/types'\n\ntype PropFromMap = {\n  category: Category[]\n}\n\ntype PropFromDispatch = {\n  fetchCategory: typeof fetchCategory\n}\n\ntype ComponentProps = RouteComponentProps & FormComponentProps & PropFromMap & PropFromDispatch\ninterface EditorState {\n  value: string\n  data: string\n}\n\nconst { Option } = Select\n\nclass BlogEditor extends Component<ComponentProps, EditorState> {\n  constructor(props: ComponentProps) {\n    super(props)\n    this.state = {\n      data: '',\n      value: ''\n    }\n  }\n\n  async componentDidMount() {\n    if (!this.props.category || this.props.category.length === 0) {\n      await this.props.fetchCategory\n    }\n  }\n\n  handleChange = (value: string) => {\n    this.setState({\n      value\n    })\n  }\n\n  handleSubmit = (e: any) => {\n    e.preventDefault()\n    this.props.form.validateFields(async (err, values) => {\n      if (!err) {\n        // 这里添加对 summary 的处理,把 contnet的一部分内容截取成为 summary 的一部分,方便渲染\n        let { title, content, category } = values,\n          summary = content.substr(0, 30)\n        // 传递信息给服务器\n        let data = { title, content, summary, category }\n        let res = await createArticle(data)\n        if (res && res.data) {\n          const articleId = res.data._id\n          message.success('发表成功,即将为你跳转到详情页')\n          setTimeout(() => {\n            this.props.history.push(`/blog/${articleId}`)\n          }, 2000)\n        }\n      }\n    })\n  }\n\n  render() {\n    // 如果种类不存在,则返回空\n    if (!this.props.category || this.props.category.length === 0) return ''\n    const { category } = this.props\n    const { getFieldDecorator } = this.props.form\n    return (\n      <Form onSubmit={this.handleSubmit} className=\"login-form\">\n        <Form.Item hasFeedback>\n          {getFieldDecorator('category', {\n            rules: [{ required: true, message: '请选择文章种类' }]\n          })(\n            <Select placeholder=\"请选择文章种类\">\n              {category.map((item) => (\n                <Option value={item._id}>{item.name}</Option>\n              ))}\n            </Select>\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('title', {\n            rules: [{ required: true, message: '请输入文章标题!' }]\n          })(\n            <Input\n              prefix={<Icon type=\"pen\" style={{ color: 'rgba(0,0,0,.25)' }} />}\n              placeholder=\"title\"\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          {getFieldDecorator('content', {\n            rules: [{ required: true, message: '请开始你的大作' }]\n          })(\n            <Editor\n              value={this.state.value}\n              onChange={this.handleChange}\n              onSave={(ev: any) => {\n                this.setState({\n                  data: ev\n                })\n              }}\n            />\n          )}\n        </Form.Item>\n        <Form.Item>\n          <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\">\n            发表文章\n          </Button>\n        </Form.Item>\n      </Form>\n    )\n  }\n}\n\nconst WrappedDynamicFieldSet = Form.create({ name: 'dynamic_form_item' })(BlogEditor)\n\nconst mapState = ({ category }: ApplicationState) => {\n  return {\n    category: category.data\n  }\n}\n\nconst mapDispatch = {\n  fetchCategory\n}\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(WrappedDynamicFieldSet)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { RouteComponentProps, Link } from 'react-router-dom'\nimport { Table, Button, Spin } from 'antd'\nimport { ColumnProps } from 'antd/lib/table'\n\n//自己写的组件\nimport { ApplicationState } from '../../store/inex'\nimport { fetchRequest } from '../../store/articles/action'\nimport { batchDeleteArticle } from '../../api/blog'\nimport { Blog } from '../../store/articles/types'\n\ntype PropFromMap = {\n  data: Blog[]\n}\ntype PropFromDispatch = {\n  fetchRequest: typeof fetchRequest\n}\n\ntype IState = {\n  articleIds: string[]\n  deleteLoading: boolean\n}\ntype ComponentProps = PropFromDispatch & RouteComponentProps & PropFromMap\n\nclass Admin extends Component<ComponentProps, IState> {\n  // 第二步 展示数据\n  // 展示数据的格式\n  public columns: ColumnProps<Blog>[]\n  constructor(props: ComponentProps) {\n    super(props)\n    this.state = {\n      articleIds: [],\n      deleteLoading: false\n    }\n    this.columns = [\n      {\n        title: 'title',\n        dataIndex: '_id',\n        key: '_id',\n        render: (text: string, record: Blog) => (\n          <Link to={`/blog/${record._id}`}>{record.title}</Link>\n        )\n      },\n      {\n        title: '种类',\n        key: 'category._id',\n        dataIndex: 'category.name'\n      }\n    ]\n  }\n\n  // 第一步加载数据\n  async componentDidMount() {\n    if (!this.props.data || this.props.data.length === 0) {\n      await fetchRequest()\n    }\n  }\n\n  // 第四步删除操作\n  handleClick = async () => {\n    this.setState({\n      deleteLoading: true\n    })\n    // 删除指定的 ID\n    if (this.state.articleIds && this.state.articleIds.length !== 0) {\n      let res = await batchDeleteArticle(this.state.articleIds)\n      /* 服务器返回数据格式\n       * {\n       *   deleteCount:number,\n       *   n:number,\n       *   ok:string\n       * }\n       */\n      // 删除数据成功后更新状态\n      if (res.data) {\n        this.props.fetchRequest()\n        this.setState({\n          articleIds: [],\n          deleteLoading: false\n        })\n      }\n    }\n  }\n\n  render() {\n    const rowSelection = {\n      onChange: (selectedRowKeys: any, selectedRows: any) => {\n        // 第三步,把选择的ID 添加到 状态中\n        this.setState({\n          articleIds: selectedRowKeys\n        })\n      }\n    }\n\n    return (\n      <div>\n        <Spin spinning={this.state.deleteLoading}>\n          <Table\n            rowSelection={rowSelection}\n            columns={this.columns}\n            dataSource={this.props.data}\n            rowKey={(record) => {\n              return record._id\n            }}\n          />\n          <Button onClick={this.handleClick} loading={this.state.deleteLoading}>\n            删除\n          </Button>\n        </Spin>\n      </div>\n    )\n  }\n}\n\nconst mapState = ({ blogs }: ApplicationState) => {\n  return {\n    data: blogs.data\n  }\n}\n\nconst mapDispatch = {\n  fetchRequest\n}\n\nexport default connect(\n  mapState,\n  mapDispatch\n)(Admin)\n","import React from 'react'\nimport { Route, Switch, Redirect, useLocation } from 'react-router-dom'\nimport { Row, Col } from 'antd'\nimport { TransitionGroup, CSSTransition } from 'react-transition-group'\n\n// 自己写的组件\nimport AppHeader from './components/header'\nimport AppSider from './components/sider'\nimport AppHome from './pages/home'\nimport Article from './pages/article'\nimport About from './pages/about'\nimport BlogContent from './pages/article/Blog'\nimport BlogEditor from './pages/article/BlogEditor'\nimport Admin from './pages/admin/Admin'\n\nimport './index.less'\n\nconst Routes: React.SFC = () => {\n  let location = useLocation()\n  return (\n    /*    <Layout>\n      <Header style={{ padding: '0', width: '100%', backgroundColor: 'white' }}>\n        <AppHeader />\n      </Header>\n      <Layout>\n        <Sider theme=\"light\" collapsible={true} collapsedWidth={0} width={400}>\n          <AppSider />\n        </Sider>\n        <Content style={{ minWidth: '640px' }}>\n          <Switch>\n            <Route path=\"/\" />\n          </Switch>\n        </Content>\n      </Layout>\n      <Footer>Footer</Footer>\n    </Layout> */\n    <div>\n      <Row>\n        <Col sm={24} xs={24} md={24} lg={24} xl={24}>\n          <AppHeader />\n        </Col>\n      </Row>\n      <TransitionGroup>\n        <CSSTransition key={location.key} classNames=\"fade\" timeout={600}>\n          <Row>\n            <Col sm={0} xs={0} md={0} lg={8} xl={8}>\n              <AppSider />\n            </Col>\n\n            <Col sm={24} xs={24} md={24} lg={16} xl={16}>\n              <Switch location={location}>\n                <Route path=\"/home\" component={AppHome} />\n                <Route path=\"/article\" component={Article} />\n                <Route path=\"/about\" component={About} />\n                <Route path=\"/blog/:id\" component={BlogContent} />\n                <Route path=\"/editor\" component={BlogEditor} />\n                <Route path=\"/admin\" component={Admin} />\n                <Redirect from=\"\" to=\"/home\" />\n              </Switch>\n            </Col>\n          </Row>\n        </CSSTransition>\n      </TransitionGroup>\n    </div>\n  )\n}\n\nexport default Routes\n","import { createGlobalStyle } from 'styled-components'\n\nexport const Globalstyle = createGlobalStyle`\n  *{\n    box-sizing:border-box;\n  }\n  html, body, div, span, applet, object, iframe,\n  h1, h2, h3, h4, h5, h6, p, blockquote, pre,\n  a, abbr, acronym, address, big, cite, code,\n  del, dfn, em, img, ins, kbd, q, s, samp,\n  small, strike, strong, sub, sup, tt, var,\n  b, u, i, center,\n  dl, dt, dd, ol, ul, li,\n  fieldset, form, label, legend,\n  table, caption, tbody, tfoot, thead, tr, th, td,\n  article, aside, canvas, details, embed, \n  figure, figcaption, footer, header, hgroup, \n  menu, nav, output, ruby, section, summary,\n  time, mark, audio, video {\n    margin: 0;\n    padding: 0;\n    border: 0;\n    font-size: 100%;\n    font: inherit;\n    vertical-align: baseline;\n  }\n  /* HTML5 display-role reset for older browsers */\n  article, aside, details, figcaption, figure, \n  footer, header, hgroup, menu, nav, section {\n    display: block;\n  }\n  body {\n    line-height: 1;\n  }\n  ol, ul {\n    list-style: none;\n  }\n  blockquote, q {\n    quotes: none;\n  }\n  blockquote:before, blockquote:after,\n  q:before, q:after {\n    content: '';\n    content: none;\n  }\n  table {\n    border-collapse: collapse;\n    border-spacing: 0;\n  }\n  \n`\n","import React from 'react'\n// 第三方库\nimport { Store } from 'redux'\nimport { History } from 'history'\nimport { ConfigProvider } from 'antd'\nimport { Provider } from 'react-redux'\nimport zhCN from 'antd/es/locale/zh_CN'\nimport { ConnectedRouter } from 'connected-react-router'\n\n// 自己写的文件\nimport Routes from './Routes'\nimport { ApplicationState } from './store/inex'\nimport { Globalstyle } from './style'\n\n// Main 组件的属性\ninterface MainProps {\n  store: Store<ApplicationState>\n  history: History\n}\n\nconst App: React.FC<MainProps> = ({ store, history }) => {\n  return (\n    // 使用 antd 本地化配置\n    <ConfigProvider locale={zhCN}>\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <Globalstyle />\n          <Routes />\n        </ConnectedRouter>\n      </Provider>\n    </ConfigProvider>\n  )\n}\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { all, call, fork, put, takeEvery } from 'redux-saga/effects'\nimport { BlogActionTypes } from './types'\nimport { fetchError, fetchSuccess } from './action'\nimport { getArticles } from '../../api/blog'\n\nfunction* getArticle(param: any) {\n  try {\n    // To call async functions, use redux-saga's `call()`.\n    const res = yield call(getArticles, param.page, param.limit, param.category, param.tag)\n    if (res.error) {\n      yield put(fetchError(res.error))\n    } else {\n      yield put(fetchSuccess(res.data.items))\n    }\n  } catch (err) {\n    if (err instanceof Error && err.stack) {\n      yield put(fetchError(err.stack))\n    } else {\n      yield put(fetchError('An unknown error occured.'))\n    }\n  }\n}\n\n// This is our watcher function. We use `take*()` functions to watch Redux for a specific action\n// type, and run our saga, for example the `handleFetch()` saga above.\nfunction* watchFetchRequest() {\n  yield takeEvery(BlogActionTypes.FETCH_REQUEST, getArticle)\n}\n\n// We can also use `fork()` here to split our saga into multiple watchers.\nfunction* blogsSaga() {\n  yield all([fork(watchFetchRequest)])\n}\n\nexport default blogsSaga\n","import { Reducer } from 'redux'\nimport { BlogState, BlogActionTypes } from './types'\n\n// Type-safe initialState!\nexport const initialState: BlogState = {\n  data: [],\n  errors: undefined,\n  loading: false\n}\n\n// Thanks to Redux 4's much simpler typings, we can take away a lot of typings on the reducer side,\n// everything will remain type-safe.\nconst reducer: Reducer<BlogState> = (state = initialState, action) => {\n  switch (action.type) {\n    case BlogActionTypes.FETCH_REQUEST: {\n      return { ...state, loading: true }\n    }\n    case BlogActionTypes.FETCH_SUCCESS: {\n      return { ...state, loading: false, data: action.payload }\n    }\n    case BlogActionTypes.FETCH_ERROR: {\n      return { ...state, loading: false, errors: action.payload }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\n// Instead of using default export, we use named exports. That way we can group these exports\n// inside the `index.js` folder.\nexport { reducer as blogReducer }\n","import { all, call, fork, put, takeEvery } from 'redux-saga/effects'\nimport { categoryActionTypes } from './types'\nimport { fetchError, fetchSuccess } from './action'\nimport { getCategories } from '../../api/blog'\n\nfunction* getCategory() {\n  try {\n    // To call async functions, use redux-saga's `call()`.\n    const res = yield call(getCategories)\n    if (res.error) {\n      yield put(fetchError(res.error))\n    } else {\n      yield put(fetchSuccess(res.data))\n    }\n  } catch (err) {\n    if (err instanceof Error && err.stack) {\n      yield put(fetchError(err.stack))\n    } else {\n      yield put(fetchError('An unknown error occured.'))\n    }\n  }\n}\n\n// This is our watcher function. We use `take*()` functions to watch Redux for a specific action\n// type, and run our saga, for example the `handleFetch()` saga above.\nfunction* watchFetchRequest() {\n  yield takeEvery(categoryActionTypes.FETCH_REQUEST, getCategory)\n}\n\n// We can also use `fork()` here to split our saga into multiple watchers.\nfunction* categorySaga() {\n  yield all([fork(watchFetchRequest)])\n}\n\nexport default categorySaga\n","import { Reducer } from 'redux'\nimport { CategoryState, categoryActionTypes } from './types'\n\n// Type-safe initialState!\nexport const initialState: CategoryState = {\n  data: [],\n  errors: undefined,\n  loading: false\n}\n\n// Thanks to Redux 4's much simpler typings, we can take away a lot of typings on the reducer side,\n// everything will remain type-safe.\nconst reducer: Reducer<CategoryState> = (state = initialState, action) => {\n  switch (action.type) {\n    case categoryActionTypes.FETCH_REQUEST: {\n      return { ...state, loading: true }\n    }\n    case categoryActionTypes.FETCH_SUCCESS: {\n      return { ...state, loading: false, data: action.payload }\n    }\n    case categoryActionTypes.FETCH_ERROR: {\n      return { ...state, loading: false, errors: action.payload }\n    }\n    default: {\n      return state\n    }\n  }\n}\n\n// Instead of using default export, we use named exports. That way we can group these exports\n// inside the `index.js` folder.\nexport { reducer as categoryReducer }\n","import { Reducer } from 'redux'\nimport { UserState, USER_LOGIN_ACTION, UserAction, USER_LOGOUT_ACTION } from './types'\n\nconst initialState: UserState = {\n  login: false\n}\n\nconst reducer: Reducer<UserState, UserAction> = (state = initialState, action) => {\n  switch (action.type) {\n    case USER_LOGIN_ACTION: {\n      return { ...state, login: true }\n    }\n    case USER_LOGOUT_ACTION: {\n      return { ...state, login: false }\n    }\n    default:\n      return state\n  }\n}\n\nexport { reducer as userReducer }\n","import { combineReducers } from 'redux'\nimport { all, fork } from 'redux-saga/effects'\nimport { connectRouter, RouterState } from 'connected-react-router'\nimport { History } from 'history'\n\nimport blogsSaga from './articles/sagas'\nimport { blogReducer } from './articles/reducer'\nimport { BlogState } from './articles/types'\nimport categorySaga from './category/sagas'\nimport { categoryReducer } from './category/reducer'\nimport { CategoryState } from './category/types'\nimport { userReducer } from './user/reducer'\nimport { UserState } from './user/types'\n\nexport interface ApplicationState {\n  blogs: BlogState\n  router: RouterState\n  user: UserState\n  category: CategoryState\n}\n\nexport const createRootReducer = (history: History) =>\n  combineReducers({\n    user: userReducer,\n    blogs: blogReducer,\n    category: categoryReducer,\n    router: connectRouter(history)\n  })\n\nexport function* rootSaga() {\n  yield all([fork(blogsSaga), fork(categorySaga)])\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport configureStore from './configStore'\nimport { createBrowserHistory } from 'history'\n\nimport 'antd/dist/antd.css' // or 'antd/dist/antd.less'\n\nconst initialState = window.INITIAL_REDUX_STATE\nconst history = createBrowserHistory()\nconst store = configureStore(history, initialState)\n\nReactDOM.render(<App store={store} history={history} />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { Store, createStore, applyMiddleware } from 'redux'\nimport createSagaMiddleware from 'redux-saga'\n\n// 使用 redux 管理导航连接\nimport { routerMiddleware } from 'connected-react-router'\n\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport { History } from 'history'\nimport { ApplicationState, createRootReducer, rootSaga } from './store/inex'\n\nexport default function configureStore(\n  history: History,\n  initialState: ApplicationState\n): Store<ApplicationState> {\n  const composeEnhancers = composeWithDevTools({})\n\n  const sagaMiddleware = createSagaMiddleware()\n\n  const store = createStore(\n    createRootReducer(history),\n    initialState,\n    composeEnhancers(applyMiddleware(routerMiddleware(history), sagaMiddleware))\n  )\n\n  sagaMiddleware.run(rootSaga)\n  return store\n}\n"],"sourceRoot":""}